{"version":3,"file":"static/js/421.9bda9380.chunk.js","mappings":"8QAGaA,EAAYC,EAAAA,GAAAA,KAAH,qHACN,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAOJC,EAAYJ,EAAAA,GAAAA,MAAH,gPACP,SAAAC,GAAC,OAAIA,EAAEC,MAAMG,UAAUC,CAAtB,IACH,SAAAL,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAOO,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAITI,EAAYP,EAAAA,GAAAA,MAAH,wHACP,SAAAC,GAAC,OAAIA,EAAEC,MAAMG,UAAUG,EAAtB,IAGK,SAAAP,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAITM,EAAUT,EAAAA,GAAAA,IAAH,6FAID,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAGPO,EAAeV,EAAAA,GAAAA,IAAH,mJAKL,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAIRQ,GAAcX,EAAAA,EAAAA,IAAOY,EAAAA,EAAPZ,CAAH,2FAGL,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,I,oBC9CPJ,EAAY,WACvB,OAA0Bc,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAmB,SAAAC,GACvB,IAAMC,EAAQD,EAAIE,OAClB,OAAQD,EAAME,MACZ,IAAK,QACH,OAAOT,EAASO,EAAMG,OACxB,IAAK,WACH,OAAOR,EAAYK,EAAMG,OAC3B,QACE,OAEL,EAkBD,OACE,UAAC,EAAD,CAAcC,SAZK,SAAAL,GACnBA,EAAIM,iBACJ,IAAMC,EAAOP,EAAIQ,cACjBX,GACEY,EAAAA,EAAAA,IAAM,CACJhB,MAAOc,EAAKG,SAASjB,MAAMW,MAC3BT,SAAUY,EAAKG,SAASf,SAASS,SAVrCV,EAAS,IACTE,EAAY,GAab,EAEuCe,aAAa,MAAnD,WACE,UAAC,EAAD,YACE,UAAC,EAAD,YACE,SAAC,EAAD,CAAcC,QAAQ,QAAtB,qBACA,SAAC,EAAD,CAAcA,QAAQ,WAAtB,2BAEF,UAAC,EAAD,YACE,SAAC,EAAD,CACEC,GAAG,QACHC,KAAK,QACLX,KAAK,QACLC,MAAOX,EACPsB,SAAUhB,EACViB,YAAY,sBACZC,UAAQ,KAEV,SAAC,EAAD,CACEJ,GAAG,WACHC,KAAK,WACLX,KAAK,WACLC,MAAOT,EACPoB,SAAUhB,EACViB,YAAY,aACZC,UAAQ,WAKd,SAAC,EAAD,CAAgBC,QAAQ,YAAYJ,KAAK,SAAzC,sBAKL,ECtEYK,EAAY,WACvB,OAAO,SAACzC,EAAD,GACR,C","sources":["components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","Pages/LogIn/LoginPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Button } from '@mui/material';\n\nexport const LoginForm = styled.form`\n  margin-top: ${p => p.theme.space[5]}px;\n  display: flex;\n  flex-direction: column;\n\n  align-items: center;\n`;\n\nexport const InputArea = styled.input`\n  font-size: ${p => p.theme.fontSizes.m}px;\n  padding: ${p => p.theme.space[1]}px;\n  border: none;\n  outline: none;\n  border-bottom: 1px solid black;\n  background-color: transparent;\n  width: 400px;\n  :not(:last-child) {\n    margin-bottom: ${p => p.theme.space[4]}px;\n  }\n`;\n\nexport const LabelArea = styled.label`\n  font-size: ${p => p.theme.fontSizes.ml}px;\n  cursor: pointer;\n  :not(:last-child) {\n    margin-bottom: ${p => p.theme.space[4]}px;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n\n  margin-bottom: ${p => p.theme.space[4]}px;\n`;\n\nexport const InnerWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  :not(:last-child) {\n    margin-right: ${p => p.theme.space[3]}px;\n  }\n`;\n\nexport const LoginButton = styled(Button)`\n  display: flex;\n  align-items: center;\n  margin-bottom: ${p => p.theme.space[4]}px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { logIn } from 'Redux/auth/authOperations';\nimport * as SC from './LoginForm.styled';\nimport { useState } from 'react';\n\nexport const LoginForm = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n\n  const handlInputChange = evt => {\n    const field = evt.target;\n    switch (field.name) {\n      case 'email':\n        return setEmail(field.value);\n      case 'password':\n        return setPassword(field.value);\n      default:\n        return;\n    }\n  };\n\n  const resetForm = () => {\n    setEmail('');\n    setPassword('');\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.currentTarget;\n    dispatch(\n      logIn({\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    resetForm();\n  };\n  return (\n    <SC.LoginForm onSubmit={handleSubmit} autoComplete=\"off\">\n      <SC.Wrapper>\n        <SC.InnerWrapper>\n          <SC.LabelArea htmlFor=\"email\">Email </SC.LabelArea>\n          <SC.LabelArea htmlFor=\"password\">Password </SC.LabelArea>\n        </SC.InnerWrapper>\n        <SC.InnerWrapper>\n          <SC.InputArea\n            id=\"email\"\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handlInputChange}\n            placeholder=\"LucasMoura@mail.com\"\n            required\n          />\n          <SC.InputArea\n            id=\"password\"\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handlInputChange}\n            placeholder=\"**********\"\n            required\n          />\n        </SC.InnerWrapper>\n      </SC.Wrapper>\n\n      <SC.LoginButton variant=\"contained\" type=\"submit\">\n        Log In\n      </SC.LoginButton>\n    </SC.LoginForm>\n  );\n};\n","import { LoginForm } from 'components/LoginForm/LoginForm';\n\nexport const LoginPage = () => {\n  return <LoginForm />;\n};\n"],"names":["LoginForm","styled","p","theme","space","InputArea","fontSizes","m","LabelArea","ml","Wrapper","InnerWrapper","LoginButton","Button","useState","email","setEmail","password","setPassword","dispatch","useDispatch","handlInputChange","evt","field","target","name","value","onSubmit","preventDefault","form","currentTarget","logIn","elements","autoComplete","htmlFor","id","type","onChange","placeholder","required","variant","LoginPage"],"sourceRoot":""}