{"version":3,"file":"static/js/134.00c8caad.chunk.js","mappings":"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","sources":["components/ContactList/ContactList.styled.js","components/ContactListItem/ContactListItem.styled.js","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","components/ChangeContact/ContactForm.styled.js","components/ChangeContact/ChangeContactForm.jsx","components/ChangeContact/ChangeContact.styled.js","components/ChangeContact/ChangeContact.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","Utils/Box.js","components/Filter/Filter.style.js","components/AddContactButton/AddContactForm.styled.js","components/AddContactButton/AddContactForm.jsx","components/AddContactButton/AddContactButton.styled.js","components/AddContactButton/AddContactButton.jsx","components/Filter/Filter.jsx","Pages/PhoneBook/PhoneBook.styled.js","Pages/PhoneBook/PhoneBook.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  padding: ${p => p.theme.space[0]}px;\n  margin: ${p => p.theme.space[0]}px;\n`;\n\nexport const TotalContacts = styled.h3`\n  margin: ${p => p.theme.space[0]}px;\n  margin-bottom: ${p => p.theme.space[3]}px;\n  text-align: center;\n`;\n","import styled from 'styled-components';\n\nexport const ListItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  :not(:last-child) {\n    margin-bottom: ${p => p.theme.space[3]}px;\n  }\n`;\n\nexport const ListItemText = styled.p`\n  margin: ${p => p.theme.space[0]}px;\n\n  font-size: ${p => p.theme.fontSizes.ml}px;\n  text-align: center;\n`;\n\nexport const ListItemBtn = styled.button`\n  justify-content: start;\n  margin-right: ${p => p.theme.space[2]}px;\n  cursor: pointer;\n  background-color: transparent;\n  border-radius: 50%;\n  width: auto;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  outline: none;\n  border: none;\n  transition: 250ms linear;\n\n  :hover,\n  :focus {\n    box-shadow: ${p => p.theme.shadows.deletButton};\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  width: 100%;\n  height: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 20;\n\n  background-color: ${p => p.theme.colors.backdropBackground};\n`;\n\nexport const Inner = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  max-width: 1200px;\n  max-height: auto;\n  background-color: ${p => p.theme.colors.modalBackground};\n`;\n\nexport const CloseBtn = styled.button`\n  position: absolute;\n  top: 5px;\n  right: 5px;\n  background-color: transparent;\n  border: none;\n  outline: none;\n  cursor: pointer;\n  transition: 250ms linear;\n\n  :hover {\n    color: red;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\n\nimport { createPortal } from 'react-dom';\nimport { ImCross } from 'react-icons/im';\nimport * as SC from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const Modal = ({ toggleModal, children }) => {\n  useEffect(() => {\n    const coseModal = evt => {\n      if (evt.code === 'Escape') {\n        toggleModal();\n      }\n    };\n    window.addEventListener('keydown', coseModal);\n    document.body.style.overflow = 'hidden';\n    return () => {\n      window.removeEventListener('keydown', coseModal);\n      document.body.style.overflow = '';\n    };\n  }, [toggleModal]);\n\n  const closeOnClick = evt => {\n    if (evt.target === evt.currentTarget) {\n      toggleModal();\n    }\n  };\n\n  return createPortal(\n    <SC.Overlay onClick={closeOnClick}>\n      <SC.Inner>\n        {children}\n        <SC.CloseBtn type=\"button\" onClick={toggleModal}>\n          <ImCross size=\"16\" />\n        </SC.CloseBtn>\n      </SC.Inner>\n    </SC.Overlay>,\n\n    modalRoot\n  );\n};\n\nModal.propTypes = {\n  toggleModal: PropTypes.func,\n  children: PropTypes.node,\n};\n","import styled from 'styled-components';\nimport { Button } from '@mui/material';\n\nexport const AddFormWrap = styled.div`\n  border: ${p => p.theme.borders.contactForm};\n  padding: ${p => p.theme.space[3]}px;\n  width: 220px;\n\n  @media (min-width: 768px) {\n    padding: ${p => p.theme.space[5]}px;\n    width: 400px;\n  }\n`;\n\nexport const ContactFrm = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const FormLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: ${p => p.theme.space[3]}px;\n`;\n\nexport const FormInput = styled.input`\n  margin-top: ${p => p.theme.space[2]}px;\n`;\n\nexport const FormBtn = styled(Button)`\n  min-width: 100px;\n  margin: 0 auto;\n  cursor: pointer;\n  padding: ${p => p.theme.space[1]}px;\n  transition: box-shadow 150ms linear;\n\n  :hover,\n  :focus {\n    box-shadow: ${p => p.theme.shadows.buttonsShadow};\n  }\n`;\n","import React, { useState } from 'react';\nimport {\n  ContactFrm,\n  FormLabel,\n  FormInput,\n  FormBtn,\n  AddFormWrap,\n} from './ContactForm.styled';\nimport PropTypes from 'prop-types';\n\nimport {\n  useChangeContactsMutation,\n  useFetchContactsQuery,\n} from 'Redux/contacts/contactsOperations';\n\nexport const ChangeContactForm = ({ id, toggleModal }) => {\n  const [setNewContact, { isLoading }] = useChangeContactsMutation();\n  const { data } = useFetchContactsQuery();\n\n  const [name, setName] = useState(() => {\n    const contact = data?.find(contact => contact.id === id);\n    return contact?.name;\n  });\n  const [number, setNumber] = useState(() => {\n    const contact = data?.find(contact => contact.id === id);\n    return contact?.number;\n  });\n\n  // Responsible for updating the state\n  const handleInputChange = evt => {\n    const { name, value } = evt.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return console.warn(`No ${name} options`);\n    }\n  };\n\n  // Called when the form is submitted\n  const handleSubmit = async evt => {\n    evt.preventDefault();\n    const contactToChange = {\n      name,\n      number,\n      id,\n    };\n    try {\n      await setNewContact(contactToChange);\n    } catch (err) {\n      console.log(err);\n    }\n    reset();\n    toggleModal();\n  };\n\n  // Reset the form inputs\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <AddFormWrap>\n      <ContactFrm onSubmit={handleSubmit}>\n        <FormLabel>\n          Name\n          <FormInput\n            value={name}\n            onChange={handleInputChange}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </FormLabel>\n\n        <FormLabel>\n          Number\n          <FormInput\n            value={number}\n            onChange={handleInputChange}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </FormLabel>\n\n        <FormBtn\n          variant=\"contained\"\n          aria-label=\"add contact\"\n          type=\"submit\"\n          disabled={isLoading}\n        >\n          Change contact\n        </FormBtn>\n      </ContactFrm>\n    </AddFormWrap>\n  );\n};\n\nChangeContactForm.propTypes = {\n  id: PropTypes.string,\n  toggleModal: PropTypes.func,\n};\n","import styled from 'styled-components';\nimport { Button } from '@mui/material';\n\nexport const ChangeBtn = styled(Button)`\n  min-width: 60px;\n  transition: box-shadow 150ms linear;\n  :hover,\n  :focus {\n    box-shadow: ${p => p.theme.shadows.buttonsShadow};\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { Modal } from 'components/Modal/Modal';\nimport { ChangeContactForm } from './ChangeContactForm';\nimport { FaUserEdit } from 'react-icons/fa';\nimport * as SC from './ChangeContact.styled';\n\nexport const ChangeContact = ({ id }) => {\n  const [addContact, setAddContact] = useState(false);\n\n  const toggleModal = () => {\n    setAddContact(prevState => !prevState);\n  };\n\n  return (\n    <>\n      <SC.ChangeBtn type=\"button\" onClick={toggleModal} variant=\"contained\">\n        <FaUserEdit size=\"22px\" />\n      </SC.ChangeBtn>\n      {addContact && (\n        <Modal toggleModal={toggleModal}>\n          <ChangeContactForm id={id} toggleModal={toggleModal} />\n        </Modal>\n      )}\n    </>\n  );\n};\n\nChangeContact.propTypes = {\n  id: PropTypes.string,\n};\n","import PropTypes from 'prop-types';\nimport * as SC from './ContactListItem.styled';\n\nimport { useDeleteContactsMutation } from 'Redux/contacts/contactsOperations';\nimport { ChangeContact } from 'components/ChangeContact/ChangeContact';\nimport { FcCancel, FcPhoneAndroid } from 'react-icons/fc';\n\nexport const ContactListItem = ({ name, number, id }) => {\n  const [deleteContact, { isLoading }] = useDeleteContactsMutation();\n\n  return (\n    <>\n      <SC.ListItem>\n        <ChangeContact id={id} />\n        <SC.ListItemText>\n          {<FcPhoneAndroid size=\"17px\" />} {name}: {number}\n        </SC.ListItemText>\n        <SC.ListItemBtn\n          variant=\"contained\"\n          type=\"button\"\n          aria-label=\"delete contact\"\n          onClick={() => deleteContact(id)}\n          disabled={isLoading}\n        >\n          {<FcCancel size=\"28px\" />}\n        </SC.ListItemBtn>\n      </SC.ListItem>\n    </>\n  );\n};\n\nContactListItem.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n  id: PropTypes.string,\n};\n","import * as SC from './ContactList.styled';\nimport { ContactListItem } from '../ContactListItem/ContactListItem';\nimport { useSelector } from 'react-redux';\nimport { getFilter } from '../../Redux/contacts/filterSlice';\nimport * as contactsOperations from '../../Redux/contacts/contactsOperations';\n\nexport const ContactList = () => {\n  const { data } = contactsOperations.useFetchContactsQuery();\n\n  const filterItem = useSelector(getFilter);\n\n  //Responsible for rendering the requested/all contacts\n  const findContactbyName = () => {\n    return data?.filter(contact =>\n      contact?.name.toLowerCase().includes(filterItem)\n    );\n  };\n\n  return (\n    <>\n      <SC.TotalContacts>\n        Contacts : {findContactbyName()?.length}\n      </SC.TotalContacts>\n\n      <SC.List>\n        {findContactbyName()?.map(({ name, number, id }) => (\n          <ContactListItem key={id} name={name} number={number} id={id} />\n        ))}\n      </SC.List>\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport { color, space, layout, flexbox, border, shadow } from 'styled-system';\n\nexport const Box = styled('div')(color, space, layout, flexbox, border, shadow);\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  margin-right: ${p => p.theme.space[3]}px;\n  margin-top: ${p => p.theme.space[0]}px;\n  margin-bottom: ${p => p.theme.space[0]}px;\n`;\n\nexport const FindArea = styled.input`\n  border: none;\n  outline: none;\n  border-bottom: 1px solid black;\n  background-color: transparent;\n  width: 200px;\n`;\n","import styled from 'styled-components';\nimport { Button } from '@mui/material';\n\nexport const AddFormWrap = styled.div`\n  border: ${p => p.theme.borders.contactForm};\n  padding: ${p => p.theme.space[3]}px;\n  width: 220px;\n\n  @media (min-width: 768px) {\n    padding: ${p => p.theme.space[5]}px;\n    width: 400px;\n  }\n`;\n\nexport const ContactFrm = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const FormLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: ${p => p.theme.space[3]}px;\n`;\n\nexport const FormInput = styled.input`\n  margin-top: ${p => p.theme.space[2]}px;\n`;\n\nexport const FormBtn = styled(Button)`\n  min-width: 100px;\n  margin: 0 auto;\n  cursor: pointer;\n  padding: ${p => p.theme.space[1]}px;\n  transition: box-shadow 150ms linear;\n\n  :hover,\n  :focus {\n    box-shadow: ${p => p.theme.shadows.buttonsShadow};\n  }\n`;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport * as SC from './AddContactForm.styled';\n\nimport {\n  useFetchContactsQuery,\n  usePostContactsMutation,\n} from 'Redux/contacts/contactsOperations';\nexport const AddContactForm = ({ toggleModal }) => {\n  const { data } = useFetchContactsQuery();\n  const [postContact, { isLoading }] = usePostContactsMutation();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  // Responsible for updating the state\n  const handleInputChange = evt => {\n    const { name, value } = evt.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return console.warn(`No ${name} options`);\n    }\n  };\n\n  // Called when the form is submitted\n  const handleSubmit = async evt => {\n    evt.preventDefault();\n    if (data) {\n      const isInclude = data?.map(contact => contact.name);\n      if (isInclude?.includes(name)) {\n        return alert(`${name} is already in contacts`);\n      }\n    }\n    const contactToAdd = {\n      name,\n      number,\n    };\n\n    try {\n      await postContact(contactToAdd);\n    } catch (err) {\n      console.log(err);\n    }\n    reset();\n    toggleModal();\n  };\n\n  // Reset the form inputs\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <SC.AddFormWrap>\n      <SC.ContactFrm onSubmit={handleSubmit}>\n        <SC.FormLabel>\n          Name\n          <SC.FormInput\n            value={name}\n            onChange={handleInputChange}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </SC.FormLabel>\n\n        <SC.FormLabel>\n          Number\n          <SC.FormInput\n            value={number}\n            onChange={handleInputChange}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </SC.FormLabel>\n\n        <SC.FormBtn\n          variant=\"contained\"\n          aria-label=\"add contact\"\n          type=\"submit\"\n          disabled={isLoading}\n        >\n          Add contact\n        </SC.FormBtn>\n      </SC.ContactFrm>\n    </SC.AddFormWrap>\n  );\n};\n\nAddContactForm.propTypes = {\n  toggleModal: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\nimport { Button } from '@mui/material';\n\nexport const AddBtn = styled(Button)`\n  min-width: 60px;\n  transition: box-shadow 150ms linear;\n  :hover,\n  :focus {\n    box-shadow: ${p => p.theme.shadows.buttonsShadow};\n  }\n`;\n","import { useState } from 'react';\nimport { Modal } from 'components/Modal/Modal';\nimport { AddContactForm } from 'components/AddContactButton/AddContactForm';\nimport { FaUserPlus } from 'react-icons/fa';\nimport * as SC from './AddContactButton.styled';\n\nexport const AddContactButton = () => {\n  const [addContact, setAddContact] = useState(false);\n\n  const toggleModal = () => {\n    setAddContact(prevState => !prevState);\n  };\n\n  return (\n    <>\n      <SC.AddBtn type=\"button\" onClick={toggleModal} variant=\"contained\">\n        <FaUserPlus size=\"22px\" />\n      </SC.AddBtn>\n      {addContact && (\n        <Modal toggleModal={toggleModal}>\n          <AddContactForm toggleModal={toggleModal} />\n        </Modal>\n      )}\n    </>\n  );\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { Box } from 'Utils/Box';\nimport { filterContact, getFilter } from '../../Redux/contacts/filterSlice';\nimport * as SC from './Filter.style';\nimport { AddContactButton } from 'components/AddContactButton/AddContactButton';\nimport { FcSearch } from 'react-icons/fc';\n\nexport const Filter = () => {\n  const filterList = useSelector(getFilter);\n  const dispatch = useDispatch();\n  return (\n    <Box\n      display=\"flex\"\n      justifyContent=\"space-between\"\n      alignItems=\"center\"\n      mb={3}\n    >\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n        <SC.Title>\n          <FcSearch size=\"24px\" />\n        </SC.Title>\n        <SC.FindArea\n          type=\"text\"\n          name=\"filter\"\n          value={filterList}\n          autoComplete=\"off\"\n          placeholder=\"Enter name\"\n          onChange={evt => dispatch(filterContact(evt.target.value))}\n        />\n      </Box>\n      <AddContactButton />\n    </Box>\n  );\n};\n","import styled from 'styled-components';\n\nexport const MaineTitle = styled.h1`\n  text-align: center;\n  margin-top: ${p => p.theme.space[3]}px;\n  margin-bottom: ${p => p.theme.space[3]}px;\n`;\n","import { ContactList } from '../../components/ContactList/ContactList';\nimport { Filter } from '../../components/Filter/Filter';\nimport { MaineTitle } from './PhoneBook.styled';\n\nexport const PhoneBookPage = () => {\n  return (\n    <>\n      <MaineTitle>Easy manage your contacts</MaineTitle>\n      <Filter />\n      <ContactList />\n    </>\n  );\n};\n"],"names":["List","styled","p","theme","space","TotalContacts","ListItem","ListItemText","fontSizes","ml","ListItemBtn","shadows","deletButton","Overlay","colors","backdropBackground","Inner","modalBackground","CloseBtn","modalRoot","document","querySelector","Modal","toggleModal","children","useEffect","coseModal","evt","code","window","addEventListener","body","style","overflow","removeEventListener","createPortal","onClick","target","currentTarget","type","size","AddFormWrap","borders","contactForm","ContactFrm","FormLabel","FormInput","FormBtn","Button","buttonsShadow","ChangeContactForm","id","useChangeContactsMutation","setNewContact","isLoading","data","useFetchContactsQuery","useState","contact","find","name","setName","number","setNumber","handleInputChange","value","console","warn","handleSubmit","preventDefault","contactToChange","log","reset","onSubmit","onChange","pattern","title","required","variant","disabled","ChangeBtn","ChangeContact","addContact","setAddContact","prevState","ContactListItem","useDeleteContactsMutation","deleteContact","ContactList","contactsOperations","filterItem","useSelector","getFilter","findContactbyName","filter","toLowerCase","includes","length","map","Box","color","layout","flexbox","border","shadow","Title","FindArea","AddContactForm","usePostContactsMutation","postContact","isInclude","alert","contactToAdd","AddBtn","AddContactButton","Filter","filterList","dispatch","useDispatch","display","justifyContent","alignItems","mb","autoComplete","placeholder","filterContact","MaineTitle","PhoneBookPage"],"sourceRoot":""}